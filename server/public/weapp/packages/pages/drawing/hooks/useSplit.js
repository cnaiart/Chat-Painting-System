"use strict";const e=require("../../../../common/vendor.js");exports.useSplit=(t,r)=>{const{columns:s,rows:n}=r;if(!t)throw Error("请传入图片地址");if(!s&&!n)throw Error("请传入columns和rows");const a=async(r,s,n)=>{const a=e.index.createOffscreenCanvas({type:"2d",width:r,height:s}),c=a.getContext("2d"),i=a.createImage();return await new Promise((e=>{i.src=t,i.onload=e})),c.clearRect(0,0,r,s),c.drawImage(i,0,0,r,s),o(c)},o=e=>{const t=e.canvas.width/s,r=e.canvas.height/n,a=[];for(let o=0;o<n;o++){const n=[];for(let a=0;a<s;a++){const s=c(e,a*t,o*r,t,r);n.push(s)}a.push(...n)}return a},c=(t,r,s,n,a)=>{const o=e.index.createOffscreenCanvas({type:"2d",width:n,height:a}),c=o.getContext("2d"),i=t.getImageData(r,s,n,a);return c.putImageData(i,0,0),o.toDataURL("image/png",1)};return{getImages:()=>new Promise(((r,s)=>{e.index.getImageInfo({src:t,success:e=>{r(a(e.width,e.height))},fail:e=>{s(e)}})}))}};
